"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[841],{5326:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=i(4848),t=i(8453);const s={sidebar_position:1},r="Options",a={id:"configuration/options",title:"Options",description:"Options are used to configure the editor,",source:"@site/docs/configuration/options.md",sourceDirName:"configuration",slug:"/configuration/options",permalink:"/docs/configuration/options",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration/"},next:{title:"Keys",permalink:"/docs/configuration/keybindings"}},l={},c=[{value:"Neovim options",id:"neovim-options",level:2},{value:"Example options",id:"example-options",level:3},{value:"Neovim variables",id:"neovim-variables",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"#neovim-options",children:"Options"})," are used to configure the editor,\n",(0,o.jsx)(n.a,{href:"#neovim-variables",children:"variables"})," to configure vimscript plugins."]}),"\n",(0,o.jsx)(n.h2,{id:"neovim-options",children:"Neovim options"}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://neovim.io/doc/user/lua-guide.html#lua-guide-options",children:(0,o.jsx)(n.code,{children:":help lua-guide-options"})})," to learn more."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"To set options:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"vim.opt.{option} = {value}\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"To get options:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"vim.opt.{option}:get()\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-options",children:"Example options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'vim.opt.cmdheight = 2 -- more space in the neovim command line for displaying messages\nvim.opt.guifont = "monospace:h17" -- the font used in graphical neovim applications\nvim.opt.shiftwidth = 2 -- the number of spaces inserted for each indentation\nvim.opt.tabstop = 2 -- insert 2 spaces for a tab\nvim.opt.relativenumber = true -- relative line numbers\nvim.opt.wrap = true -- wrap lines\n\n-- use treesitter folding\nvim.opt.foldmethod = "expr"\nvim.opt.foldexpr = "nvim_treesitter#foldexpr()"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"neovim-variables",children:"Neovim variables"}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://neovim.io/doc/user/lua-guide.html#lua-guide-variables",children:(0,o.jsx)(n.code,{children:":help lua-guide-variables"})})," to learn more."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"To get and set variables use:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"vim.g.{name} -- global variables (g:)\nvim.b.{name} -- variables for the current buffer (b:)\nvim.w.{name} -- variables for the current window (w:)\nvim.t.{name} -- variables for the current tabpage (t:)\nvim.v.{name} -- predefined Vim variables (v:)\nvim.env.{name} -- environment variables defined in the editor session\n"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);