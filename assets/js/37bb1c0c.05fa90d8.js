"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18],{8871:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>h,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=t(4848),s=t(8453);const r={sidebar_position:2},d="Core Plugins List",l={id:"features/core-plugins-list",title:"Core Plugins List",description:"Needed Plugins",source:"@site/docs/features/core-plugins-list.md",sourceDirName:"features",slug:"/features/core-plugins-list",permalink:"/docs/features/core-plugins-list",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/docs/features/"}},h={},c=[{value:"Needed Plugins",id:"needed-plugins",level:2},{value:"Optional plugins",id:"optional-plugins",level:2}];function o(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"core-plugins-list",children:"Core Plugins List"}),"\n",(0,n.jsx)(i.h2,{id:"needed-plugins",children:"Needed Plugins"}),"\n",(0,n.jsx)(i.p,{children:"Plugins that you can't disable"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Plugin"}),(0,n.jsx)(i.th,{children:"description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/folke/lazy.nvim",children:"folke/lazy.nvim"})}),(0,n.jsx)(i.td,{children:"A use-package inspired plugin manager for Neovim. Uses native packages, supports Luarocks dependencies"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/neovim/nvim-lspconfig",children:"neovim/nvim-lspconfig"})}),(0,n.jsx)(i.td,{children:"Quickstart configurations for the Nvim LSP client"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/williamboman/mason.nvim",children:"williamboman/mason.nvim"})}),(0,n.jsx)(i.td,{children:"Easily install and manage LSP servers, DAP servers, linters, and formatters"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/williamboman/mason-lspconfig.nvim",children:"williamboman/mason-lspconfig.nvim"})}),(0,n.jsx)(i.td,{children:"Extension to mason.nvim that makes it easier to use lspconfig with mason.nvim"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvimtools/none-ls.nvim",children:"nvimtools/none-ls.nvim"})}),(0,n.jsx)(i.td,{children:"Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/tamago324/nlsp-settings.nvim",children:"tamago324/nlsp-settings.nvim"})}),(0,n.jsx)(i.td,{children:"A plugin for setting Neovim LSP with JSON or YAML files"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/folke/neodev.nvim",children:"folke/neodev.nvim"})}),(0,n.jsx)(i.td,{children:"\ud83d\udcbb Dev setup for init.lua and plugin development with full signature help, docs and completion for the nvim lua API."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/hrsh7th/cmp-nvim-lsp",children:"hrsh7th/cmp-nvim-lsp"})}),(0,n.jsx)(i.td,{children:"nvim-cmp source for neovim builtin LSP client"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/saadparwaiz1/cmp_luasnip",children:"saadparwaiz1/cmp_luasnip"})}),(0,n.jsx)(i.td,{children:"luasnip completion source for nvim-cmp"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/hrsh7th/cmp-buffer",children:"hrsh7th/cmp-buffer"})}),(0,n.jsx)(i.td,{children:"nvim-cmp source for buffer words"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/hrsh7th/cmp-path",children:"hrsh7th/cmp-path"})}),(0,n.jsx)(i.td,{children:"nvim-cmp source for paths"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/L3MON4D3/LuaSnip",children:"L3MON4D3/LuaSnip"})}),(0,n.jsx)(i.td,{children:"Snippet Engine for Neovim written in Lua."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvoid-lua/base16",children:"nvoid-lua/base16"})}),(0,n.jsx)(i.td,{children:"Colors for Nvoid"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvim-treesitter/nvim-treesitter",children:"nvim-treesitter/nvim-treesitter"})}),(0,n.jsx)(i.td,{children:"Nvim Treesitter configurations and abstraction layer"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvim-lua/plenary.nvim",children:"nvim-lua/plenary.nvim"})}),(0,n.jsx)(i.td,{children:"plenary: full; complete; entire; absolute; unqualified. All the lua functions I don't want to write twice."})]})]})]}),"\n",(0,n.jsx)(i.h2,{id:"optional-plugins",children:"Optional plugins"}),"\n",(0,n.jsx)(i.p,{children:"Plugins that you can disable"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Plugin"}),(0,n.jsx)(i.th,{children:"description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/hrsh7th/cmp-cmdline",children:"hrsh7th/cmp-cmdline"})}),(0,n.jsx)(i.td,{children:"nvim-cmp source for cmdline commands"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/mfussenegger/nvim-dap",children:"mfussenegger/nvim-dap"})}),(0,n.jsx)(i.td,{children:"Debug Adapter Protocol client implementation for Neovim (>= 0.5)"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/rcarriga/nvim-dap-ui",children:"rcarriga/nvim-dap-ui"})}),(0,n.jsx)(i.td,{children:"A UI for nvim-dap which provides a good out of the box configuration"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/rafamadriz/friendly-snippets",children:"rafamadriz/friendly-snippets"})}),(0,n.jsx)(i.td,{children:"Set of preconfigured snippets for different languages."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/goolord/alpha-nvim",children:"goolord/alpha-nvim"})}),(0,n.jsx)(i.td,{children:"a lua powered greeter like vim-startify / dashboard-nvim"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/RRethy/vim-illuminate",children:"RRethy/vim-illuminate"})}),(0,n.jsx)(i.td,{children:"highlight word under the cursor using either LSP, Tree-sitter, or regex matching"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/lukas-reineke/indent-blankline.nvim",children:"lukas-reineke/indent-blankline.nvim"})}),(0,n.jsx)(i.td,{children:"Indent guides for Neovim"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/folke/which-key.nvim",children:"folke/which-key.nvim"})}),(0,n.jsx)(i.td,{children:"Displays a popup with possible keybindings of the command you started typing."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvim-tree/nvim-web-devicons",children:"nvim-tree/nvim-web-devicons"})}),(0,n.jsxs)(i.td,{children:["lua ",(0,n.jsx)(i.code,{children:"fork"})," of vim-web-devicons for neovim"]})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/nvim-telescope/telescope.nvim",children:"nvim-telescope/telescope.nvim"})}),(0,n.jsx)(i.td,{children:"Find, Filter, Preview, Pick. All lua, all the time."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/SmiteshP/nvim-navic",children:"SmiteshP/nvim-navic"})}),(0,n.jsx)(i.td,{children:"winbar/statusline plugin that shows your current code context"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/windwp/nvim-autopairs",children:"windwp/nvim-autopairs"})}),(0,n.jsx)(i.td,{children:"autopairs for neovim written by lua"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/kyazdani42/nvim-tree.lua",children:"kyazdani42/nvim-tree.lua"})}),(0,n.jsx)(i.td,{children:"A file explorer tree for neovim written in lua"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/lewis6991/gitsigns.nvim",children:"lewis6991/gitsigns.nvim"})}),(0,n.jsx)(i.td,{children:"Git integration for buffers"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)("a",{href:"https://github.com/numToStr/Comment.nvim",children:"numToStr/Comment.nvim"})}),(0,n.jsx)(i.td,{children:"Smart and powerful comment plugin for neovim. Supports treesitter, dot repeat, left-right/up-down motions, hooks, and more"})]})]})]})]})}function a(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>d,x:()=>l});var n=t(6540);const s={},r=n.createContext(s);function d(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);